# .github/workflows/build.yaml
name: pynalog CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          echo "testing: ${{github.ref}}"
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Lint
        run: |
          black --check pynalog
          isort --check pynalog
          flake8 pynalog --max-complexity 10
          pylint pynalog
  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", 3.10"]
        # exclude:
        #   - os: macos-latest
        #     python-version: 3.7
        #   - os: windows-latest
        #     python-version: 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Test
        run: |
          cd tests
          pytest --cov
      # - name: Coveralls
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #       pip install coveralls
      #       coveralls --service=github



  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]

  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2

  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install tox tox-gh-actions

  #     - name: Run tox
  #       run: tox
